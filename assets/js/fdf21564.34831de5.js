"use strict";(self.webpackChunkmy_learning_paths=self.webpackChunkmy_learning_paths||[]).push([[9616],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(t),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return t?a.createElement(f,r(r({ref:n},p),{},{components:t})):a.createElement(f,r({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[m]="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2991:(e,n,t)=>{t.d(n,{Z:()=>b});var a=t(7294),o=t(6010),i=t(2802),r=t(9960),c=t(3919),s=t(5999);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:n,children:t}=e;return a.createElement(r.Z,{href:n,className:(0,o.Z)("card padding--lg",l.cardContainer)},t)}function m(e){let{href:n,icon:t,title:i,description:r}=e;return a.createElement(p,{href:n},a.createElement("h2",{className:(0,o.Z)("text--truncate",l.cardTitle),title:i},t," ",i),r&&a.createElement("p",{className:(0,o.Z)("text--truncate",l.cardDescription),title:r},r))}function d(e){let{item:n}=e;const t=(0,i.Wl)(n);return t?a.createElement(m,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n.items.length})}):null}function u(e){let{item:n}=e;const t=(0,c.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,i.xz)(n.docId??void 0);return a.createElement(m,{href:n.href,icon:t,title:n.label,description:n.description??o?.description})}function f(e){let{item:n}=e;switch(n.type){case"link":return a.createElement(u,{item:n});case"category":return a.createElement(d,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}function g(e){let{className:n}=e;const t=(0,i.jA)();return a.createElement(b,{items:t.items,className:n})}function b(e){const{items:n,className:t}=e;if(!n)return a.createElement(g,e);const r=(0,i.MN)(n);return a.createElement("section",{className:(0,o.Z)("row",t)},r.map(((e,n)=>a.createElement("article",{key:n,className:"col col--6 margin-bottom--lg"},a.createElement(f,{item:e})))))}},92:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(7462),o=(t(7294),t(3905)),i=t(2991);const r={sidebar_position:1},c="Companion Object",s={unversionedId:"programming/languages/kotlin/classes/companion-object",id:"programming/languages/kotlin/classes/companion-object",title:"Companion Object",description:"A companion object in Kotlin is an object that is declared inside a class, and marked with the companion keyword. Companion objects are used when you want to create a function or a property that is tied to an instance of the class, rather than the class itself. These functions and properties can be accessed directly via the class name, much like static methods and fields in Java.",source:"@site/docs/programming/languages/kotlin/classes/companion-object.mdx",sourceDirName:"programming/languages/kotlin/classes",slug:"/programming/languages/kotlin/classes/companion-object",permalink:"/programming/languages/kotlin/classes/companion-object",draft:!1,editUrl:"https://github.com/dennis-gonzales/dennis-gonzales.github.io/blob/main/docs/programming/languages/kotlin/classes/companion-object.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Classes",permalink:"/programming/languages/kotlin/classes/"},next:{title:"Abstract Class",permalink:"/programming/languages/kotlin/classes/abstract-class"}},l={},p=[{value:"Defining a Companion Object",id:"defining-a-companion-object",level:2},{value:"Using a Companion Object",id:"using-a-companion-object",level:2},{value:"Companion Objects and Interfaces",id:"companion-objects-and-interfaces",level:2},{value:"Common Pitfalls and Best Practices",id:"common-pitfalls-and-best-practices",level:2},{value:"Overuse of Companion Objects",id:"overuse-of-companion-objects",level:3},{value:"Initialization of Companion Objects",id:"initialization-of-companion-objects",level:3},{value:"Design Patterns",id:"design-patterns",level:2}],m={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"companion-object"},"Companion Object"),(0,o.kt)("p",null,"A companion object in Kotlin is an object that is declared inside a class, and marked with the ",(0,o.kt)("inlineCode",{parentName:"p"},"companion")," keyword. Companion objects are used when you want to create a function or a property that is tied to an instance of the class, rather than the class itself. These functions and properties can be accessed directly via the class name, much like static methods and fields in Java."),(0,o.kt)("h2",{id:"defining-a-companion-object"},"Defining a Companion Object"),(0,o.kt)("p",null,"A companion object is defined within a class using the ",(0,o.kt)("inlineCode",{parentName:"p"},"companion object")," keywords, followed by the object body."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="CompanionObjectDefinition.kt"',title:'"CompanionObjectDefinition.kt"'},"class MyClass {\n    companion object {\n        // Companion object body goes here\n    }\n}\n")),(0,o.kt)("h2",{id:"using-a-companion-object"},"Using a Companion Object"),(0,o.kt)("p",null,"The members of the companion object can be accessed directly via the class name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="UseCompanionObject.kt"',title:'"UseCompanionObject.kt"'},'class MyClass {\n    companion object {\n        val myConst: String = "Hello, World!"\n\n        fun greet() {\n            println(myConst)\n        }\n    }\n}\n\nfun main() {\n    MyClass.greet() // Prints: Hello, World!\n}\n')),(0,o.kt)("p",null,"In the above example, ",(0,o.kt)("inlineCode",{parentName:"p"},"MyClass")," has a companion object with a property ",(0,o.kt)("inlineCode",{parentName:"p"},"myConst")," and a function ",(0,o.kt)("inlineCode",{parentName:"p"},"greet"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"greet")," function is called directly on ",(0,o.kt)("inlineCode",{parentName:"p"},"MyClass"),"."),(0,o.kt)("h2",{id:"companion-objects-and-interfaces"},"Companion Objects and Interfaces"),(0,o.kt)("p",null,"A companion object can implement an interface, allowing the companion object to inherit abstract methods from the interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="CompanionObjectInterface.kt"',title:'"CompanionObjectInterface.kt"'},'interface MyInterface {\n    fun displayMessage()\n}\n\nclass MyClass {\n    companion object : MyInterface {\n        override fun displayMessage() {\n            println("Hello, World!")\n        }\n    }\n}\n\nfun main() {\n    val myInterface: MyInterface = MyClass.Companion\n    myInterface.displayMessage() // Prints: Hello, World!\n}\n')),(0,o.kt)("p",null,"In the above example, ",(0,o.kt)("inlineCode",{parentName:"p"},"MyClass.Companion")," is an object that implements ",(0,o.kt)("inlineCode",{parentName:"p"},"MyInterface"),"."),(0,o.kt)("h2",{id:"common-pitfalls-and-best-practices"},"Common Pitfalls and Best Practices"),(0,o.kt)("h3",{id:"overuse-of-companion-objects"},"Overuse of Companion Objects"),(0,o.kt)("p",null,"Companion objects are similar to static members in other languages. While they can be useful, they can also lead to procedural style code if overused. Try to use companion objects sparingly, and favor object-oriented design principles."),(0,o.kt)("h3",{id:"initialization-of-companion-objects"},"Initialization of Companion Objects"),(0,o.kt)("p",null,"The initialization of a companion object is thread-safe. However, if it performs complex operations or relies on state that might be changed by other threads, synchronization issues can occur."),(0,o.kt)("h2",{id:"design-patterns"},"Design Patterns"),(0,o.kt)("p",null,"In the context of design patterns, companion objects can be useful in several cases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Factory Method: The Factory method can be defined in a companion object, allowing instances of a class to be created without using the constructor directly."),(0,o.kt)("li",{parentName:"ul"},"Singleton: A companion object is a good place to implement the Singleton pattern in Kotlin because it guarantees that only one instance of the object exists.")),(0,o.kt)("p",null,"Understanding companion objects is key to writing idiomatic Kotlin and leveraging the full power of the language."),(0,o.kt)(i.Z,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);