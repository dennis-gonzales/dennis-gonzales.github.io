"use strict";(self.webpackChunkmy_learning_paths=self.webpackChunkmy_learning_paths||[]).push([[5963],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(f,r(r({ref:t},p),{},{components:n})):a.createElement(f,r({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,r[1]=o;for(var c=2;c<l;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2991:(e,t,n)=>{n.d(t,{Z:()=>h});var a=n(7294),i=n(6010),l=n(2802),r=n(9960),o=n(3919),s=n(5999);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function p(e){let{href:t,children:n}=e;return a.createElement(r.Z,{href:t,className:(0,i.Z)("card padding--lg",c.cardContainer)},n)}function m(e){let{href:t,icon:n,title:l,description:r}=e;return a.createElement(p,{href:t},a.createElement("h2",{className:(0,i.Z)("text--truncate",c.cardTitle),title:l},n," ",l),r&&a.createElement("p",{className:(0,i.Z)("text--truncate",c.cardDescription),title:r},r))}function u(e){let{item:t}=e;const n=(0,l.Wl)(t);return n?a.createElement(m,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function d(e){let{item:t}=e;const n=(0,o.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",i=(0,l.xz)(t.docId??void 0);return a.createElement(m,{href:t.href,icon:n,title:t.label,description:t.description??i?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return a.createElement(d,{item:t});case"category":return a.createElement(u,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function g(e){let{className:t}=e;const n=(0,l.jA)();return a.createElement(h,{items:n.items,className:t})}function h(e){const{items:t,className:n}=e;if(!t)return a.createElement(g,e);const r=(0,l.MN)(t);return a.createElement("section",{className:(0,i.Z)("row",n)},r.map(((e,t)=>a.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},a.createElement(f,{item:e})))))}},4536:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),l=n(2991);const r={sidebar_position:1},o="Collections",s={unversionedId:"programming/languages/kotlin/data-types/collections/index",id:"programming/languages/kotlin/data-types/collections/index",title:"Collections",description:"Collections in Kotlin are a set of interfaces and classes that provide high-performance, feature-rich manipulation of data sets. Collections include Lists, Sets, and Maps.",source:"@site/docs/programming/languages/kotlin/data-types/collections/index.mdx",sourceDirName:"programming/languages/kotlin/data-types/collections",slug:"/programming/languages/kotlin/data-types/collections/",permalink:"/programming/languages/kotlin/data-types/collections/",draft:!1,editUrl:"https://github.com/dennis-gonzales/dennis-gonzales.github.io/blob/main/docs/programming/languages/kotlin/data-types/collections/index.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Data Types",permalink:"/programming/languages/kotlin/data-types/"},next:{title:"Diving Deep",permalink:"/programming/languages/kotlin/data-types/collections/diving-deep"}},c={},p=[{value:"List",id:"list",level:2},{value:"Set",id:"set",level:2},{value:"Map",id:"map",level:2},{value:"Common Pitfalls and Best Practices",id:"common-pitfalls-and-best-practices",level:2},{value:"Immutable vs Mutable Collections",id:"immutable-vs-mutable-collections",level:3},{value:"Avoid Premature Optimization",id:"avoid-premature-optimization",level:3},{value:"Null Safety with Collections",id:"null-safety-with-collections",level:3},{value:"Design Patterns",id:"design-patterns",level:2}],m={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"collections"},"Collections"),(0,i.kt)("p",null,"Collections in Kotlin are a set of interfaces and classes that provide high-performance, feature-rich manipulation of data sets. Collections include Lists, Sets, and Maps."),(0,i.kt)("h2",{id:"list"},"List"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"./collections/lists"},"List")," in Kotlin is an ordered collection of items. Lists can contain duplicate elements. Lists in Kotlin are created using the ",(0,i.kt)("inlineCode",{parentName:"p"},"listOf"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"mutableListOf"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arrayListOf")," functions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="ListExample.kt"',title:'"ListExample.kt"'},"val numbers = listOf(1, 2, 3, 4, 5)\nprintln(numbers) // Prints: [1, 2, 3, 4, 5]\n")),(0,i.kt)("h2",{id:"set"},"Set"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"./collections/sets"},"Set")," in Kotlin is a collection of items that cannot contain duplicate elements. It's useful when you want to store a collection of distinct elements."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="SetExample.kt"',title:'"SetExample.kt"'},"val numbers = setOf(1, 2, 3, 2, 1)\nprintln(numbers) // Prints: [1, 2, 3]\n")),(0,i.kt)("h2",{id:"map"},"Map"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"./collections/maps"},"Map")," in Kotlin is a collection of key-value pairs. Each key is unique, and each key maps to exactly one value. The values can be duplicates."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="MapExample.kt"',title:'"MapExample.kt"'},'val numbers = mapOf("one" to 1, "two" to 2, "three" to 3)\nprintln(numbers["two"]) // Prints: 2\n')),(0,i.kt)("h2",{id:"common-pitfalls-and-best-practices"},"Common Pitfalls and Best Practices"),(0,i.kt)("h3",{id:"immutable-vs-mutable-collections"},"Immutable vs Mutable Collections"),(0,i.kt)("p",null,"Kotlin distinguishes between mutable and immutable collections (read-only). It's a good practice to use read-only versions of collections whenever possible."),(0,i.kt)("h3",{id:"avoid-premature-optimization"},"Avoid Premature Optimization"),(0,i.kt)("p",null,"Kotlin collections are designed to be efficient and performant, but premature optimization can lead to code that's harder to read and maintain. Always strive for readability and use more optimized collections or operations only when necessary."),(0,i.kt)("h3",{id:"null-safety-with-collections"},"Null Safety with Collections"),(0,i.kt)("p",null,"Kotlin's type system is designed to eliminate null pointer exceptions, but if you're not careful, you can still run into problems with null. When working with collections, be aware of functions that can return null."),(0,i.kt)("h2",{id:"design-patterns"},"Design Patterns"),(0,i.kt)("p",null,"In the context of design patterns, collections are used in almost every pattern, but here are a few notable uses:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In the Composite pattern, an object is built from other objects. These 'child' objects are typically stored in a collection within the 'parent' object."),(0,i.kt)("li",{parentName:"ul"},"In the Observer pattern, the subject keeps a collection of observers."),(0,i.kt)("li",{parentName:"ul"},"Many of the behavioral design patterns use collections to store and manage objects.")),(0,i.kt)("p",null,"In general, Kotlin's powerful and flexible collection library allows you to solve a wide variety of problems in an elegant and expressive way. Understanding how to use collections effectively is a critical skill in Kotlin programming."),(0,i.kt)(l.Z,{mdxType:"DocCardList"}))}d.isMDXComponent=!0}}]);