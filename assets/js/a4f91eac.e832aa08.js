"use strict";(self.webpackChunkmy_learning_paths=self.webpackChunkmy_learning_paths||[]).push([[8511],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),g=n,d=u["".concat(l,".").concat(g)]||u[g]||m[g]||o;return a?r.createElement(d,i(i({ref:t},c),{},{components:a})):r.createElement(d,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7963:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={},i="Rust",s={unversionedId:"programming/languages/rust",id:"programming/languages/rust",title:"Rust",description:"Rust is a statically typed, high-level, multi-paradigm programming language that focuses on performance, reliability, and productivity. It was designed at Mozilla Research with the aim of providing a safe, concurrent, practical language.",source:"@site/docs/programming/languages/rust.md",sourceDirName:"programming/languages",slug:"/programming/languages/rust",permalink:"/programming/languages/rust",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/programming/languages/rust.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python",permalink:"/programming/languages/python"},next:{title:"Solidity",permalink:"/programming/languages/solidity"}},l={},p=[{value:"Key Features",id:"key-features",level:2},{value:"Pros and Cons",id:"pros-and-cons",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rust"},"Rust"),(0,n.kt)("p",null,"Rust is a ",(0,n.kt)("strong",{parentName:"p"},"statically typed, high-level, multi-paradigm")," programming language that focuses on performance, reliability, and productivity. It was designed at Mozilla Research with the aim of providing a safe, concurrent, practical language."),(0,n.kt)("p",null,"Rust can be classified as a ",(0,n.kt)("strong",{parentName:"p"},"system programming language")," and is often used for creating system utilities, game engines, browsers, operating systems, and other performance-critical applications."),(0,n.kt)("h2",{id:"key-features"},"Key Features"),(0,n.kt)("p",null,"Here are some key features and principles of Rust:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Zero-cost Abstractions:"),' One of Rust\'s slogans is "zero-cost abstractions," which means that its high-level abstractions compile to code as efficient as hand-written low level code.')),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Memory Safety Without Garbage Collection:")," Rust provides memory safety without a garbage collector. It accomplishes this through a system of ownership with a set of rules that the compiler checks at compile time. No garbage collector is needed, and runtime performance is not impacted.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Concurrency Without Data Races:")," Rust has excellent support for concurrent programming. It employs a unique ownership model to prevent data races at compile time, which makes multithreaded programming safer and more straightforward.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Interoperability with C:")," Rust provides a foreign function interface (FFI) to allow interoperability with C code, and it can be called from C as well. This makes it easier to integrate Rust into existing codebases.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Package Manager:"),' Rust includes a package manager called Cargo by default. Cargo is used for a variety of tasks, such as building your project, pulling in dependencies (referred to as "crates" in Rust), running tests, and more.')),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Immutability by Default:")," In Rust, all variables are immutable by default. This default encourages a coding style that treats mutating state as an action that should be explicit and visible, making code easier to reason about.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Rich Type System:")," Rust's rich type system supports common concepts such as integers, floats, and Booleans, as well as more complex types such as structs, enums, and tuples.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Error Handling:")," Rust uses a unique approach to handle errors in a way that it distinguishes between recoverable and unrecoverable errors, which makes it easier to manage and debug when things go wrong."))),(0,n.kt)("h2",{id:"pros-and-cons"},"Pros and Cons"),(0,n.kt)("p",null,"Since Rust is relatively young compared to other system programming languages like C and C++, its ecosystem is still growing. However, its focus on safety, speed, and concurrency makes it a compelling choice for system-level and performance-critical software."))}m.isMDXComponent=!0}}]);