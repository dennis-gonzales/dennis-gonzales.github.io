"use strict";(self.webpackChunkmy_learning_paths=self.webpackChunkmy_learning_paths||[]).push([[53],{1109:a=>{a.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/intro","docId":"intro"},{"type":"category","label":"Programming","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Paradigm","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Functional (FP)","href":"/programming/paradigm/functional","docId":"programming/paradigm/functional"},{"type":"link","label":"Object-Oriented (OOP)","href":"/programming/paradigm/object-oriented","docId":"programming/paradigm/object-oriented"},{"type":"link","label":"Procedural (PP)","href":"/programming/paradigm/procedural","docId":"programming/paradigm/procedural"}],"href":"/programming/paradigm/"},{"type":"category","label":"Languages","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Variables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Diving Deep","href":"/programming/languages/python/variables/diving-deep","docId":"programming/languages/python/variables/diving-deep"}],"href":"/programming/languages/python/variables/"},{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dictionary","href":"/programming/languages/python/data-types/dict","docId":"programming/languages/python/data-types/dict"},{"type":"link","label":"List","href":"/programming/languages/python/data-types/list","docId":"programming/languages/python/data-types/list"},{"type":"link","label":"Tuple","href":"/programming/languages/python/data-types/tuple","docId":"programming/languages/python/data-types/tuple"}],"href":"/programming/languages/python/data-types/"},{"type":"link","label":"Classes","href":"/programming/languages/python/classes/","docId":"programming/languages/python/classes/index"},{"type":"link","label":"Comprehensions","href":"/programming/languages/python/comprehensions/","docId":"programming/languages/python/comprehensions/index"},{"type":"link","label":"Control Flow","href":"/programming/languages/python/control-flow/","docId":"programming/languages/python/control-flow/index"},{"type":"link","label":"Decorators","href":"/programming/languages/python/decorators/","docId":"programming/languages/python/decorators/index"},{"type":"link","label":"Exception Handling","href":"/programming/languages/python/exception-handling/","docId":"programming/languages/python/exception-handling/index"},{"type":"link","label":"Functions","href":"/programming/languages/python/functions/","docId":"programming/languages/python/functions/index"},{"type":"link","label":"Modules and Packages","href":"/programming/languages/python/modules-and-packages/","docId":"programming/languages/python/modules-and-packages/index"},{"type":"link","label":"Paradigm","href":"/programming/languages/python/paradigm/","docId":"programming/languages/python/paradigm/index"}],"href":"/programming/languages/python/"},{"type":"category","label":"Kotlin","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Variables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deep Dive","href":"/programming/languages/kotlin/variables/deep-dive","docId":"programming/languages/kotlin/variables/deep-dive"}],"href":"/programming/languages/kotlin/variables/"},{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Collections","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Diving Deep","href":"/programming/languages/kotlin/data-types/collections/diving-deep","docId":"programming/languages/kotlin/data-types/collections/diving-deep"},{"type":"link","label":"Lists","href":"/programming/languages/kotlin/data-types/collections/lists","docId":"programming/languages/kotlin/data-types/collections/lists"},{"type":"link","label":"Maps","href":"/programming/languages/kotlin/data-types/collections/maps","docId":"programming/languages/kotlin/data-types/collections/maps"},{"type":"link","label":"Sets","href":"/programming/languages/kotlin/data-types/collections/sets","docId":"programming/languages/kotlin/data-types/collections/sets"}],"href":"/programming/languages/kotlin/data-types/collections/"},{"type":"link","label":"Numbers","href":"/programming/languages/kotlin/data-types/numbers","docId":"programming/languages/kotlin/data-types/numbers"},{"type":"link","label":"Strings","href":"/programming/languages/kotlin/data-types/strings","docId":"programming/languages/kotlin/data-types/strings"}],"href":"/programming/languages/kotlin/data-types/"},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deep Dive","href":"/programming/languages/kotlin/functions/deep-dive","docId":"programming/languages/kotlin/functions/deep-dive"}],"href":"/programming/languages/kotlin/functions/"},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Companion Object","href":"/programming/languages/kotlin/classes/companion-object","docId":"programming/languages/kotlin/classes/companion-object"},{"type":"link","label":"Abstract Class","href":"/programming/languages/kotlin/classes/abstract-class","docId":"programming/languages/kotlin/classes/abstract-class"},{"type":"link","label":"Data Class","href":"/programming/languages/kotlin/classes/data-class","docId":"programming/languages/kotlin/classes/data-class"},{"type":"link","label":"Inner Class","href":"/programming/languages/kotlin/classes/inner-class","docId":"programming/languages/kotlin/classes/inner-class"},{"type":"link","label":"Open Class","href":"/programming/languages/kotlin/classes/open-class","docId":"programming/languages/kotlin/classes/open-class"},{"type":"link","label":"Sealed Class","href":"/programming/languages/kotlin/classes/sealed-class","docId":"programming/languages/kotlin/classes/sealed-class"},{"type":"link","label":"Singleton Class","href":"/programming/languages/kotlin/classes/singleton-class","docId":"programming/languages/kotlin/classes/singleton-class"}],"href":"/programming/languages/kotlin/classes/"},{"type":"category","label":"Coroutines","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Android Practices","href":"/programming/languages/kotlin/coroutines/android-practices","docId":"programming/languages/kotlin/coroutines/android-practices"}],"href":"/programming/languages/kotlin/coroutines/"}],"href":"/programming/languages/kotlin/"},{"type":"category","label":"TypeScript","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Variables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deep Dive","href":"/programming/languages/typescript/variables/deep-dive","docId":"programming/languages/typescript/variables/deep-dive"}],"href":"/programming/languages/typescript/variables/"},{"type":"link","label":"Data Types","href":"/programming/languages/typescript/data-types/","docId":"programming/languages/typescript/data-types/index"},{"type":"category","label":"Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Functional Programming","href":"/programming/languages/typescript/functions/functional-programming","docId":"programming/languages/typescript/functions/functional-programming"}],"href":"/programming/languages/typescript/functions/"},{"type":"link","label":"React with TypeScript","href":"/programming/languages/typescript/react/","docId":"programming/languages/typescript/react/index"}],"href":"/programming/languages/typescript/"},{"type":"link","label":"C","href":"/programming/languages/c","docId":"programming/languages/c"},{"type":"link","label":"C++","href":"/programming/languages/cplusplus","docId":"programming/languages/cplusplus"},{"type":"link","label":"CSharp","href":"/programming/languages/csharp","docId":"programming/languages/csharp"},{"type":"link","label":"FSharp","href":"/programming/languages/fsharp","docId":"programming/languages/fsharp"},{"type":"link","label":"Golang","href":"/programming/languages/go","docId":"programming/languages/go"},{"type":"link","label":"Java","href":"/programming/languages/java","docId":"programming/languages/java"},{"type":"link","label":"JavaScript","href":"/programming/languages/javascript","docId":"programming/languages/javascript"},{"type":"link","label":"Rust","href":"/programming/languages/rust","docId":"programming/languages/rust"},{"type":"link","label":"Solidity","href":"/programming/languages/solidity","docId":"programming/languages/solidity"}],"href":"/programming/languages/"},{"type":"category","label":"Design Patterns","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Creational","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Test","href":"/programming/design-pattern/creational/pattern","docId":"programming/design-pattern/creational/pattern"}],"href":"/programming/design-pattern/creational/"},{"type":"category","label":"Structural","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Test","href":"/programming/design-pattern/structural/pattern","docId":"programming/design-pattern/structural/pattern"}],"href":"/programming/design-pattern/structural/"},{"type":"category","label":"Behavioral","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Test","href":"/programming/design-pattern/behavioral/pattern","docId":"programming/design-pattern/behavioral/pattern"}],"href":"/programming/design-pattern/behavioral/"},{"type":"link","label":"Dependency Injection","href":"/programming/design-pattern/dependency-injection","docId":"programming/design-pattern/dependency-injection"}],"href":"/programming/design-pattern/"},{"type":"category","label":"Design Principles","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SOLID Principle","href":"/programming/design-principle/SOLID","docId":"programming/design-principle/SOLID"}],"href":"/programming/design-principle/"}],"href":"/programming/"},{"type":"category","label":"Application","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Android","href":"/application/android/","docId":"application/android/index"}],"href":"/application/"},{"type":"category","label":"Docusaurus Docs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tutorial Intro","href":"/tutorial-template/intro","docId":"tutorial-template/intro"},{"type":"category","label":"Tutorial - Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Page","href":"/tutorial-template/tutorial-basics/create-a-page","docId":"tutorial-template/tutorial-basics/create-a-page"},{"type":"link","label":"Create a Document","href":"/tutorial-template/tutorial-basics/create-a-document","docId":"tutorial-template/tutorial-basics/create-a-document"},{"type":"link","label":"Create a Blog Post","href":"/tutorial-template/tutorial-basics/create-a-blog-post","docId":"tutorial-template/tutorial-basics/create-a-blog-post"},{"type":"link","label":"Markdown Features","href":"/tutorial-template/tutorial-basics/markdown-features","docId":"tutorial-template/tutorial-basics/markdown-features"},{"type":"link","label":"Deploy your site","href":"/tutorial-template/tutorial-basics/deploy-your-site","docId":"tutorial-template/tutorial-basics/deploy-your-site"},{"type":"link","label":"Congratulations!","href":"/tutorial-template/tutorial-basics/congratulations","docId":"tutorial-template/tutorial-basics/congratulations"}],"href":"/category/tutorial---basics"},{"type":"category","label":"Tutorial - Extras","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Manage Docs Versions","href":"/tutorial-template/tutorial-extras/manage-docs-versions","docId":"tutorial-template/tutorial-extras/manage-docs-versions"},{"type":"link","label":"Translate your site","href":"/tutorial-template/tutorial-extras/translate-your-site","docId":"tutorial-template/tutorial-extras/translate-your-site"}],"href":"/category/tutorial---extras"}],"href":"/category/docusaurus-docs"}]},"docs":{"application/android/index":{"id":"application/android/index","title":"Android","description":"Coming Soon","sidebar":"tutorialSidebar"},"application/index":{"id":"application/index","title":"Application","description":"Let\'s build some applications","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Welcome to \'My Learning Paths,\' the ultimate cheat sheet and refresher hub for everything from tech programming, blockchain, and data science, to AI, game development, and beyond.","sidebar":"tutorialSidebar"},"programming/design-pattern/behavioral/index":{"id":"programming/design-pattern/behavioral/index","title":"Behavioral","description":"","sidebar":"tutorialSidebar"},"programming/design-pattern/behavioral/pattern":{"id":"programming/design-pattern/behavioral/pattern","title":"Test","description":"Hello from Test","sidebar":"tutorialSidebar"},"programming/design-pattern/creational/index":{"id":"programming/design-pattern/creational/index","title":"Creational","description":"","sidebar":"tutorialSidebar"},"programming/design-pattern/creational/pattern":{"id":"programming/design-pattern/creational/pattern","title":"Test","description":"Hello from Test","sidebar":"tutorialSidebar"},"programming/design-pattern/dependency-injection":{"id":"programming/design-pattern/dependency-injection","title":"Dependency Injection","description":"Hello from DI","sidebar":"tutorialSidebar"},"programming/design-pattern/index":{"id":"programming/design-pattern/index","title":"Design Patterns","description":"","sidebar":"tutorialSidebar"},"programming/design-pattern/structural/index":{"id":"programming/design-pattern/structural/index","title":"Structural","description":"","sidebar":"tutorialSidebar"},"programming/design-pattern/structural/pattern":{"id":"programming/design-pattern/structural/pattern","title":"Test","description":"Hello from Test","sidebar":"tutorialSidebar"},"programming/design-principle/index":{"id":"programming/design-principle/index","title":"Design Principles","description":"","sidebar":"tutorialSidebar"},"programming/design-principle/SOLID":{"id":"programming/design-principle/SOLID","title":"SOLID Principle","description":"Hello from SOLID","sidebar":"tutorialSidebar"},"programming/index":{"id":"programming/index","title":"Programming","description":"At its most fundamental level, programming is the process of creating a set of instructions that tell a computer how to perform a task. It\'s about problem-solving, where you break down a complex task into smaller, manageable steps (or \'instructions\') that a computer can understand and execute.","sidebar":"tutorialSidebar"},"programming/languages/c":{"id":"programming/languages/c","title":"C","description":"C is a high-level, general-purpose programming language that was developed in the early 1970s by Dennis Ritchie at Bell Labs. It was originally created to write an operating system (Unix), but since then, it has become a widely used language due to its efficiency and control.","sidebar":"tutorialSidebar"},"programming/languages/cplusplus":{"id":"programming/languages/cplusplus","title":"C++","description":"C++ is a high-level, general-purpose programming language that extends the C programming language with features like classes and objects, which support the paradigm of object-oriented programming (OOP). C++ was created by Bjarne Stroustrup and first released in 1985.","sidebar":"tutorialSidebar"},"programming/languages/csharp":{"id":"programming/languages/csharp","title":"CSharp","description":"C# (pronounced \\"C-sharp\\") is a modern, high-level, general-purpose, object-oriented programming language developed by Microsoft as part of their .NET platform. It was first released in 2000 and was designed by Anders Hejlsberg and his team. C# is syntactically similar to Java and is easy to learn for programmers who are familiar with C or C++.","sidebar":"tutorialSidebar"},"programming/languages/fsharp":{"id":"programming/languages/fsharp","title":"FSharp","description":"F# (pronounced \\"F sharp\\") is a high-level, statically-typed, multi-paradigm programming language that originated from Microsoft Research. It\'s primarily designed to be a functional programming language but also supports other paradigms like imperative and object-oriented programming.","sidebar":"tutorialSidebar"},"programming/languages/go":{"id":"programming/languages/go","title":"Golang","description":"Go, also known as Golang, is a statically typed, compiled programming language designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. It was announced in 2007 and launched in 2009. Go was developed with simplicity, efficiency, and performance in mind, and it\'s often used in applications where performance and concurrency are important, such as web servers, networking tools, and data pipelines.","sidebar":"tutorialSidebar"},"programming/languages/index":{"id":"programming/languages/index","title":"Languages","description":"Programming languages are formal languages designed to express instructions to a machine, particularly a computer. These languages are a way for us to communicate with computers and tell them what to do. They consist of a set of rules (syntax) that define how programs written in the language should be structured.","sidebar":"tutorialSidebar"},"programming/languages/java":{"id":"programming/languages/java","title":"Java","description":"Java is a high-level, object-oriented programming language that was developed by Sun Microsystems, which is now owned by Oracle Corporation. It was first released in 1995 and is used to develop a wide range of applications, from mobile applications (especially in Android) to enterprise-scale business systems.","sidebar":"tutorialSidebar"},"programming/languages/javascript":{"id":"programming/languages/javascript","title":"JavaScript","description":"JavaScript is a high-level, interpreted programming language that was developed by Brendan Eich at Netscape in 1995. It is primarily used as a client-side scripting language for adding interactivity to web pages. JavaScript is an essential part of the web trio\u2014HTML, CSS, and JavaScript\u2014where HTML is used for structure, CSS for styling, and JavaScript for interactivity.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/abstract-class":{"id":"programming/languages/kotlin/classes/abstract-class","title":"Abstract Class","description":"Abstract classes in Kotlin are used as a base class for other classes. An abstract class cannot be instantiated, meaning you cannot create an object of an abstract class. It is used to define a common interface for its subclasses.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/companion-object":{"id":"programming/languages/kotlin/classes/companion-object","title":"Companion Object","description":"A companion object in Kotlin is an object that is declared inside a class, and marked with the companion keyword. Companion objects are used when you want to create a function or a property that is tied to an instance of the class, rather than the class itself. These functions and properties can be accessed directly via the class name, much like static methods and fields in Java.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/data-class":{"id":"programming/languages/kotlin/classes/data-class","title":"Data Class","description":"Data classes in Kotlin are used mainly for holding data. These are classes that do not usually contain any functionality and are often used to hold pure data. They\'re great for encapsulating multiple related data points into a single object.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/index":{"id":"programming/languages/kotlin/classes/index","title":"Classes","description":"A class in Kotlin is declared using the class keyword. Classes in Kotlin are used to create objects (instances) which contain data and functions. The data defined in the class are properties and the functions are member functions.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/inner-class":{"id":"programming/languages/kotlin/classes/inner-class","title":"Inner Class","description":"An inner class is a class which is nested within another class. An object of an inner class cannot exist without an instance of the outer class and can access its members.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/open-class":{"id":"programming/languages/kotlin/classes/open-class","title":"Open Class","description":"In Kotlin, all classes are final by default, which means they cannot be inherited from. However, if you want to allow a class to be inherited from, you can mark it as open.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/sealed-class":{"id":"programming/languages/kotlin/classes/sealed-class","title":"Sealed Class","description":"Sealed classes in Kotlin are used to represent restricted class hierarchies, where a value can be one of a set of types, but cannot be any other type. They are, in a sense, an extension of enum classes: the set of values for an enum type is also restricted, but each enum constant exists only as a single instance, whereas a subclass of a sealed class can have multiple instances, each with its own state.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/classes/singleton-class":{"id":"programming/languages/kotlin/classes/singleton-class","title":"Singleton Class","description":"A singleton class is a design pattern that restricts the instantiation of a class to a single instance. This single instance is used throughout the entire application, providing a controlled access point to the instance.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/coroutines/android-practices":{"id":"programming/languages/kotlin/coroutines/android-practices","title":"Android Practices","description":"This page presents several best practices that have a positive impact by making your app more scalable and testable when using coroutines.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/coroutines/index":{"id":"programming/languages/kotlin/coroutines/index","title":"Coroutines","description":"Coroutines are a feature of Kotlin that allows writing asynchronous and non-blocking code in a sequential style. They are very lightweight, can be launched in large numbers without consuming many system resources, and can help to manage long-running tasks that might otherwise block the main thread.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/collections/diving-deep":{"id":"programming/languages/kotlin/data-types/collections/diving-deep","title":"Diving Deep","description":"Depend upon Abstractions, Not Concretions","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/collections/index":{"id":"programming/languages/kotlin/data-types/collections/index","title":"Collections","description":"Collections in Kotlin are a set of interfaces and classes that provide high-performance, feature-rich manipulation of data sets. Collections include Lists, Sets, and Maps.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/collections/lists":{"id":"programming/languages/kotlin/data-types/collections/lists","title":"Lists","description":"A List in Kotlin is an ordered collection of items. Lists can contain duplicate elements. Kotlin provides methods to manipulate lists and their elements.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/collections/maps":{"id":"programming/languages/kotlin/data-types/collections/maps","title":"Maps","description":"A Map in Kotlin is an interface and generic collection of elements that holds data as Key/Value pairs. In a Map, keys are unique. This means that a single Map can\'t have duplicate keys. However, it can have duplicate values.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/collections/sets":{"id":"programming/languages/kotlin/data-types/collections/sets","title":"Sets","description":"A Set in Kotlin is an unordered collection of items. In a set, all elements are unique. Kotlin provides two types of sets: immutable (read-only) and mutable.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/index":{"id":"programming/languages/kotlin/data-types/index","title":"Data Types","description":"Kotlin is a statically typed programming language developed by JetBrains. It is officially supported by Google for Android application development and has gained massive popularity due to its interoperability with Java, modern syntax, and null safety.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/numbers":{"id":"programming/languages/kotlin/data-types/numbers","title":"Numbers","description":"Numbers are one of the fundamental types in Kotlin, as in many other programming languages. Kotlin handles numbers in a way that is consistent with Java, but adds some additional features to improve safety and expressiveness.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/data-types/strings":{"id":"programming/languages/kotlin/data-types/strings","title":"Strings","description":"A String in Kotlin is an immutable sequence of characters (Char). Once a string is created, it cannot be changed. This immutability is useful for multi-threaded programming as it allows safe sharing of strings between threads without synchronization.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/functions/deep-dive":{"id":"programming/languages/kotlin/functions/deep-dive","title":"Deep Dive","description":"Pass-by-sharing in Kotlin","sidebar":"tutorialSidebar"},"programming/languages/kotlin/functions/index":{"id":"programming/languages/kotlin/functions/index","title":"Functions","description":"Functions in Kotlin are declared using the fun keyword. Functions allow you to break your code into reusable pieces, making it more readable and modular.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/index":{"id":"programming/languages/kotlin/index","title":"Kotlin","description":"Kotlin is a statically typed, cross-platform, general-purpose programming language with type inference. It\'s developed and maintained by JetBrains, the company behind the IntelliJ IDEA, a popular IDE for Java. Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin\'s standard library depends on the Java Class Library, but type inference allows its syntax to be more concise.","sidebar":"tutorialSidebar"},"programming/languages/kotlin/variables/deep-dive":{"id":"programming/languages/kotlin/variables/deep-dive","title":"Deep Dive","description":"Immutable Primitive Types","sidebar":"tutorialSidebar"},"programming/languages/kotlin/variables/index":{"id":"programming/languages/kotlin/variables/index","title":"Variables","description":"Variables in Kotlin are used to store data for processing. Kotlin provides two types of variables: mutable (which can be reassigned) and immutable (which cannot be reassigned once initialized).","sidebar":"tutorialSidebar"},"programming/languages/python/classes/index":{"id":"programming/languages/python/classes/index","title":"Classes","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/comprehensions/index":{"id":"programming/languages/python/comprehensions/index","title":"Comprehensions","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/control-flow/index":{"id":"programming/languages/python/control-flow/index","title":"Control Flow","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/data-types/dict":{"id":"programming/languages/python/data-types/dict","title":"Dictionary","description":"In Python, a dictionary is a mutable, unordered collection of items. Each item stored in a dictionary has a key and a value. Dictionaries are optimized for retrieving the value when we know the key, but not the other way around.","sidebar":"tutorialSidebar"},"programming/languages/python/data-types/index":{"id":"programming/languages/python/data-types/index","title":"Data Types","description":"Python has several built-in data types, including:","sidebar":"tutorialSidebar"},"programming/languages/python/data-types/list":{"id":"programming/languages/python/data-types/list","title":"List","description":"In Python, a list is a mutable sequence type, i.e., it can be changed after creation. It is similar to an array, but can contain elements of different types.","sidebar":"tutorialSidebar"},"programming/languages/python/data-types/tuple":{"id":"programming/languages/python/data-types/tuple","title":"Tuple","description":"In Python, a tuple is an immutable sequence type. It is similar to a list in that it can contain elements of different types, but unlike lists, it cannot be changed once created (i.e., you cannot add, remove, or change elements).","sidebar":"tutorialSidebar"},"programming/languages/python/decorators/index":{"id":"programming/languages/python/decorators/index","title":"Decorators","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/exception-handling/index":{"id":"programming/languages/python/exception-handling/index","title":"Exception Handling","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/functions/index":{"id":"programming/languages/python/functions/index","title":"Functions","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/index":{"id":"programming/languages/python/index","title":"Python","description":"Python is a high-level, interpreted programming language that was created by Guido van Rossum and first released in 1991. Python is known for its clear syntax and readability, which makes it an excellent choice for beginners in programming.","sidebar":"tutorialSidebar"},"programming/languages/python/modules-and-packages/index":{"id":"programming/languages/python/modules-and-packages/index","title":"Modules and Packages","description":"","sidebar":"tutorialSidebar"},"programming/languages/python/paradigm/index":{"id":"programming/languages/python/paradigm/index","title":"Paradigm","description":"Object Oriented Programming","sidebar":"tutorialSidebar"},"programming/languages/python/variables/diving-deep":{"id":"programming/languages/python/variables/diving-deep","title":"Diving Deep","description":"In Python, understanding how memory works, how references are created, and how objects are passed to functions is crucial for writing effective code.","sidebar":"tutorialSidebar"},"programming/languages/python/variables/index":{"id":"programming/languages/python/variables/index","title":"Variables","description":"A variable is a named location used to store data in the memory. It is a way of referring to the memory location used by a computer program. Here is an example:","sidebar":"tutorialSidebar"},"programming/languages/rust":{"id":"programming/languages/rust","title":"Rust","description":"Rust is a statically typed, high-level, multi-paradigm programming language that focuses on performance, reliability, and productivity. It was designed at Mozilla Research with the aim of providing a safe, concurrent, practical language.","sidebar":"tutorialSidebar"},"programming/languages/solidity":{"id":"programming/languages/solidity","title":"Solidity","description":"Solidity is a statically-typed, contract-oriented, high-level programming language designed for implementing smart contracts on blockchain platforms like Ethereum. It was proposed in 2014 by Gavin Wood, then the CTO of Ethereum. It has been influenced by JavaScript, C++, and Python and is designed to target the Ethereum Virtual Machine (EVM).","sidebar":"tutorialSidebar"},"programming/languages/typescript/data-types/index":{"id":"programming/languages/typescript/data-types/index","title":"Data Types","description":"Data types are a fundamental concept in any programming language. They define the type of data that a variable can hold. TypeScript, a statically typed superset of JavaScript, introduces additional data types to help make your code more robust and type-safe.","sidebar":"tutorialSidebar"},"programming/languages/typescript/functions/functional-programming":{"id":"programming/languages/typescript/functions/functional-programming","title":"Functional Programming","description":"Functional programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing state and mutable data. In this paradigm, functions are first-class citizens, meaning they can be assigned to variables, passed as arguments, and returned from other functions.","sidebar":"tutorialSidebar"},"programming/languages/typescript/functions/index":{"id":"programming/languages/typescript/functions/index","title":"Functions","description":"Functions are the fundamental building block of any application in TypeScript. They define a set of actions to perform on inputs in order to produce outputs.","sidebar":"tutorialSidebar"},"programming/languages/typescript/index":{"id":"programming/languages/typescript/index","title":"TypeScript","description":"TypeScript is an open-source programming language developed and maintained by Microsoft. It was first introduced in 2012 as a statically typed superset of JavaScript that compiles to plain JavaScript. TypeScript was designed to bring static type-checking to JavaScript, along with other features like interfaces, classes, and modules, to make it easier to develop and maintain large-scale applications.","sidebar":"tutorialSidebar"},"programming/languages/typescript/react/index":{"id":"programming/languages/typescript/react/index","title":"React with TypeScript","description":"React is a popular library for building user interfaces, particularly for single-page applications where you need a fast and interactive user experience. Using TypeScript with React adds static type checking, which can help you write more robust and maintainable code.","sidebar":"tutorialSidebar"},"programming/languages/typescript/variables/deep-dive":{"id":"programming/languages/typescript/variables/deep-dive","title":"Deep Dive","description":"Memory Reference","sidebar":"tutorialSidebar"},"programming/languages/typescript/variables/index":{"id":"programming/languages/typescript/variables/index","title":"Variables","description":"Variables in TypeScript are containers that hold reusable data. The value contained in a variable can be changed, and each variable must be declared with a specific data type.","sidebar":"tutorialSidebar"},"programming/paradigm/functional":{"id":"programming/paradigm/functional","title":"Functional (FP)","description":"Functional Programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing state and mutable data. It\'s a declarative type of programming, which means programming is done with expressions or declarations instead of statements.","sidebar":"tutorialSidebar"},"programming/paradigm/index":{"id":"programming/paradigm/index","title":"Paradigm","description":"A paradigm refers to the methodology, or approach, used to solve problems with code. It\'s a style, a pattern, or a way of thinking about how programs should be structured and designed.","sidebar":"tutorialSidebar"},"programming/paradigm/object-oriented":{"id":"programming/paradigm/object-oriented","title":"Object-Oriented (OOP)","description":"Object-Oriented Programming is a programming paradigm or style that is based on the concept of \\"objects\\". Objects are instances of classes, which are essentially user-defined data types.","sidebar":"tutorialSidebar"},"programming/paradigm/procedural":{"id":"programming/paradigm/procedural","title":"Procedural (PP)","description":"Procedural Programming is a programming paradigm based upon the concept of the \'procedure call\'. Procedures, also known as routines, subroutines, or functions, simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program\'s execution, including by other procedures or itself.","sidebar":"tutorialSidebar"},"tutorial-template/intro":{"id":"tutorial-template/intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes.","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/congratulations":{"id":"tutorial-template/tutorial-basics/congratulations","title":"Congratulations!","description":"You have just learned the basics of Docusaurus and made some changes to the initial template.","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/create-a-blog-post":{"id":"tutorial-template/tutorial-basics/create-a-blog-post","title":"Create a Blog Post","description":"Docusaurus creates a page for each blog post, but also a blog index page, a tag system, an RSS feed...","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/create-a-document":{"id":"tutorial-template/tutorial-basics/create-a-document","title":"Create a Document","description":"Documents are groups of pages connected through:","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/create-a-page":{"id":"tutorial-template/tutorial-basics/create-a-page","title":"Create a Page","description":"Add Markdown or React files to src/pages to create a standalone page:","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/deploy-your-site":{"id":"tutorial-template/tutorial-basics/deploy-your-site","title":"Deploy your site","description":"Docusaurus is a static-site-generator (also called Jamstack).","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-basics/markdown-features":{"id":"tutorial-template/tutorial-basics/markdown-features","title":"Markdown Features","description":"Docusaurus supports Markdown and a few additional features.","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-extras/manage-docs-versions":{"id":"tutorial-template/tutorial-extras/manage-docs-versions","title":"Manage Docs Versions","description":"Docusaurus can manage multiple versions of your docs.","sidebar":"tutorialSidebar"},"tutorial-template/tutorial-extras/translate-your-site":{"id":"tutorial-template/tutorial-extras/translate-your-site","title":"Translate your site","description":"Let\'s translate docs/intro.md to French.","sidebar":"tutorialSidebar"}}}')}}]);