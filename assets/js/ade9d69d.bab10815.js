"use strict";(self.webpackChunkmy_learning_paths=self.webpackChunkmy_learning_paths||[]).push([[2200],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>g});var o=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,o,a=function(e,r){if(null==e)return{};var t,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)t=n[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),l=function(e){var r=o.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=l(e.components);return o.createElement(c.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},d=o.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||n;return t?o.createElement(g,i(i({ref:r},s),{},{components:t})):o.createElement(g,i({ref:r},s))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,i=new Array(n);i[0]=d;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<n;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1850:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>p,toc:()=>l});var o=t(7462),a=(t(7294),t(3905));const n={},i="Procedural (PP)",p={unversionedId:"programming/paradigm/procedural",id:"programming/paradigm/procedural",title:"Procedural (PP)",description:"Procedural Programming is a programming paradigm based upon the concept of the 'procedure call'. Procedures, also known as routines, subroutines, or functions, simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program's execution, including by other procedures or itself.",source:"@site/docs/programming/paradigm/procedural.md",sourceDirName:"programming/paradigm",slug:"/programming/paradigm/procedural",permalink:"/programming/paradigm/procedural",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/programming/paradigm/procedural.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Object-Oriented (OOP)",permalink:"/programming/paradigm/object-oriented"},next:{title:"Languages",permalink:"/programming/languages/"}},c={},l=[{value:"Key Aspects",id:"key-aspects",level:2},{value:"Pros &amp; Cons",id:"pros--cons",level:2}],s={toc:l},u="wrapper";function m(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,o.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"procedural-pp"},"Procedural (PP)"),(0,a.kt)("p",null,"Procedural Programming is a programming paradigm based upon the concept of the ",(0,a.kt)("strong",{parentName:"p"},"'procedure call'"),". Procedures, also known as routines, subroutines, or functions, simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program's execution, including by other procedures or itself."),(0,a.kt)("p",null,"In a procedural program, the logic of the program is ",(0,a.kt)("strong",{parentName:"p"},"broken down into a series of steps or operations"),", typically contained within functions or procedures. The main focus in procedural programming is the sequence in which the functions are executed."),(0,a.kt)("h2",{id:"key-aspects"},"Key Aspects"),(0,a.kt)("p",null,"Here are some key aspects of Procedural Programming:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Modularity:")," The source code for a procedural program can be organized into separate functions or procedures, allowing for reusability of code. You can create a procedure for a specific task and reuse it whenever you need to perform that task.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Sequential Execution:")," Instructions in a procedural program are executed in the order in which they're written, from top to bottom. This sequential flow of control enables a system to make decisions, loop (repeat certain operations) and accurately follow a series of steps to solve a problem.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Control Structures:")," Procedural languages provide control structures like 'if', 'for', 'while', etc., which allow the program's flow to be altered, loops to be executed, and decisions to be made.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Variable Scope:")," Variables in procedural programming have a limited scope - they exist only within the function in which they are declared."))),(0,a.kt)("p",null,"Examples of procedural programming languages include C, Go, Fortran and Pascal."),(0,a.kt)("h2",{id:"pros--cons"},"Pros & Cons"),(0,a.kt)("p",null,"While procedural programming provides a straightforward and easy-to-understand approach to problem-solving, it ",(0,a.kt)("strong",{parentName:"p"},"may not be ideal for complex application")," development that requires high scalability and manageability. For such scenarios, other paradigms like object-oriented or functional programming may be more suitable."))}m.isMDXComponent=!0}}]);